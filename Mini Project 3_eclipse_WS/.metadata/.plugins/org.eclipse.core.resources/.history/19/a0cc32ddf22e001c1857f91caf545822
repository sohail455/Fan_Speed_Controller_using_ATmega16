 /******************************************************************************
 *
 * Module: ADC
 *
 * File Name: adc.h
 *
 * Description: header file for the ATmega16 ADC driver
 *
 * Author: Mohamed Tarek
 *
 *******************************************************************************/

#ifndef ADC_H_
#define ADC_H_

#include "std_types.h"

/*******************************************************************************
 *                                Definitions                                  *
 *******************************************************************************/
#define ADC_MAXIMUM_VALUE    1023
#define ADC_REF_VOLT_VALUE   2.56
/*******************************************************************************
 *                         Types Declaration                                   *
 *******************************************************************************/
typedef enum
{
	A_REF,A_VCC,INTERNAL_V=3
}ADC_ReferenceVolatge;/*enum to choose the methods of reference voltage
* A_REF is to choose a certain voltage connected on AREF PIN
* A_VCC is to work with ADC VCC as reference volt
* INTERNAL_V is to choose the internal volt which equal 2.56v
*/

typedef enum
{
	DIVISION_2,DIVISION2_2,DIVISION_4,DIVISION_8,DIVISION_16,DIVISION_32,DIVISION_64,DIVISION_128
}ADC_Prescaler;/*enum to choose the prescaler to supply clock to the ADC*/

typedef struct{
 ADC_ReferenceVolatge ref_volt;
 ADC_Prescaler prescaler;
}ADC_ConfigType;
/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/

/*
 * Description :
 * Function responsible for initialize the ADC driver.
 */
void ADC_init(const ADC_ConfigType * Config_Ptr);

/*
 * Description :
 * Function responsible for read analog data from a certain ADC channel
 * and convert it to digital using the ADC driver.
 */
uint16 ADC_readChannel(uint8 channel_num);

#endif /* ADC_H_ */
